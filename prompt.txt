layout.tsx:
return (
    <html lang="en" className="!scroll-smooth">
      <meta name="google-site-verification" content="Wb8u9PL36Lq0RYmd_wwujQN23jvLSNrHLhALdlX_5vg" />
      <title>Atharv Shelke - Portfolio</title>
      <body
        className={`${inter.variable} ${jetbrainsMono.variable} bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 dark:from-slate-900 dark:via-slate-800 dark:to-slate-900 antialiased text-slate-900 dark:text-slate-100 relative transition-colors duration-300`}
      >
        {/* Enhanced Background Elements */}
        <div className="fixed inset-0 -z-10 overflow-hidden">
          <div className="absolute top-0 -left-4 w-72 h-72 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob"></div>
          <div className="absolute top-0 -right-4 w-72 h-72 bg-gradient-to-r from-purple-400 to-pink-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-2000"></div>
          <div className="absolute -bottom-8 left-20 w-72 h-72 bg-gradient-to-r from-pink-400 to-red-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-4000"></div>
        </div>

        <ThemeProvider>
          <ActiveSectionContextProvider>
            <Header />
            <main className="pt-16 sm:pt-20">
              {children}
            </main>
            <Footer />
          </ActiveSectionContextProvider>
        </ThemeProvider>
      </body>
    </html>
  );
  page.tsx:
  export default function Home() {
  return (
    <main className='flex flex-col items-center px-4'>
      <Intro/>
      <SectionDivider/>
      <About/>
      <Projects/>
      <Skills/>
      <Experience/>
      <Contact/>
    </main>
  );
}
components/intro.tsx:
const Intro = () => {
  const { ref } = useSectionInView("Home", 0.3);
  const { setActiveSection, setTimeOfLastClick } = useActiveSectionContext();

  return (
    <section
      ref={ref}
      className="min-h-screen flex flex-col items-center justify-center text-center px-4 scroll-mt-28"
      id='home'
    >
      {/* Hero Content */}
      <div className="max-w-4xl mx-auto">

        {/* Profile Picture with Enhanced Animation */}
        <motion.div
          className="relative mb-8 inline-block"
          initial={{ opacity: 0, scale: 0.5 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ type: 'spring', stiffness: 120, damping: 12 }}
        >
          <div className="relative w-44 h-44 sm:w-52 sm:h-52 mx-auto">
            {/* Background blur effect */}
            <div className="absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full blur-lg opacity-30 animate-pulse scale-110"></div>

            {/* Profile Image */}
            <Image
              src="/my-profile.jpg"
              alt="Atharv's Profile Picture"
              width={300}
              height={300}
              quality={100}
              priority
              className="relative w-full h-full rounded-full border-2 border-white dark:border-slate-800 object-cover shadow-2xl"
            />

            {/* Waving Hand Emoji */}
            <motion.span
              initial={{ opacity: 0, scale: 0 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ type: 'spring', stiffness: 140, delay: 0.5 }}
              className="absolute -bottom-2 -right-2 text-4xl sm:text-5xl bg-white dark:bg-slate-800 rounded-full p-2 shadow-lg border-2 border-slate-200 dark:border-slate-700"
            >
              ðŸ‘‹
            </motion.span>
          </div>
        </motion.div>



        {/* Enhanced Typography */}
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, ease: "easeOut" }}
          className="mb-8"
        >
          <h1 className="text-4xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-slate-900 to-slate-700 dark:from-white dark:to-slate-300 bg-clip-text text-transparent">
            Hi, I'm <span className="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">Atharv</span>
          </h1>

          <p className="text-xl md:text-2xl text-slate-600 dark:text-slate-300 leading-relaxed max-w-3xl mx-auto">
            A passionate <span className="font-semibold text-blue-600 dark:text-blue-400">Full-Stack Developer</span> crafting
            exceptional digital experiences with modern technologies.
          </p>

          <p className="text-lg text-slate-500 dark:text-slate-400 mt-4">
            Specializing in <span className="font-medium">React</span>, <span className="font-medium">Next.js</span>, and <span className="font-medium">AI/ML</span>
          </p>
        </motion.div>

        {/* Enhanced Action Buttons */}
        <motion.div
          initial={{ opacity: 0, y: 100 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2, duration: 0.6 }}
          className="flex flex-col sm:flex-row items-center justify-center gap-4"
        >
          <Link
            href="#contact"
            className="group bg-gradient-to-r from-blue-600 to-purple-600 text-white px-8 py-4 flex items-center gap-3 rounded-2xl font-medium shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-300"
            onClick={() => {
              setActiveSection("Contact");
              setTimeOfLastClick(Date.now());
            }}
          >
            Let&apos;s Connect
            <BsArrowRight className="group-hover:translate-x-1 transition-transform" />
          </Link>

          <a
            className="group bg-white dark:bg-slate-800 border-2 border-slate-200 dark:border-slate-700 px-8 py-4 flex items-center gap-3 rounded-2xl font-medium hover:border-blue-500 dark:hover:border-blue-400 hover:scale-105 transition-all duration-300"
            href="/new_assets/AtharvShelke_Resume.pdf"
            download
          >
            Download Resume
            <HiDownload className="group-hover:translate-y-1 transition-transform" />
          </a>

          <div className="flex gap-4">
            <a
              className="group bg-white dark:bg-slate-800 border-2 border-slate-200 dark:border-slate-700 p-4 rounded-2xl hover:border-blue-500 dark:hover:border-blue-400 hover:scale-110 transition-all duration-300"
              href="https://www.linkedin.com/in/atharv-shelke/"
              target="_blank"
              rel="noopener noreferrer"
            >
              <BsLinkedin className="text-xl text-blue-600" />
            </a>

            <a
              className="group bg-white dark:bg-slate-800 border-2 border-slate-200 dark:border-slate-700 p-4 rounded-2xl hover:border-blue-500 dark:hover:border-blue-400 hover:scale-110 transition-all duration-300"
              href="https://github.com/AtharvShelke"
              target="_blank"
              rel="noopener noreferrer"
            >
              <FaGithubSquare className="text-xl text-slate-700 dark:text-slate-300" />
            </a>
          </div>
        </motion.div>
      </div>
    </section>
  );
};
components/about.tsx:
return (
        <motion.section
            ref={ref}
            className="mb-28 w-full max-w-6xl mx-auto px-4 scroll-mt-28"
            initial={{ opacity: 0, y: 100 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.175 }}
            id="about"
        >
            <h2 className="text-3xl font-medium capitalize mb-8 text-center">About Me</h2>
            
            {/* Personal Introduction */}
            <motion.div 
                className="text-center mb-16"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.3 }}
            >
                <p className="text-xl text-slate-600 dark:text-slate-300 mb-6 max-w-3xl mx-auto leading-relaxed">
                    Hi! I'm a passionate CS Engineering student who believes in the power of code to 
                    <span className="font-semibold text-blue-600 dark:text-blue-400"> solve real-world problems</span>. 
                    My journey spans from building intuitive web applications to exploring the fascinating world of 
                    <span className="font-semibold text-purple-600 dark:text-purple-400"> Artificial Intelligence</span>.
                </p>
                
                {/* Achievement Stats */}
                <div className="flex justify-center gap-8 md:gap-12 mt-8">
                    {achievements.map((achievement, index) => (
                        <motion.div
                            key={index}
                            className="text-center"
                            initial={{ opacity: 0, scale: 0.5 }}
                            animate={{ opacity: 1, scale: 1 }}
                            transition={{ delay: 0.4 + index * 0.1 }}
                        >
                            <div className="text-3xl md:text-4xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                                {achievement.number}
                            </div>
                            <div className="text-sm text-slate-500 dark:text-slate-400 mt-1">
                                {achievement.label}
                            </div>
                        </motion.div>
                    ))}
                </div>
            </motion.div>

            {/* Journey Timeline */}
            <motion.div
                className="mb-16"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.5 }}
            >
                <h3 className="text-2xl font-bold text-center mb-10 text-slate-900 dark:text-white">
                    My Journey
                </h3>
                <div className="grid md:grid-cols-3 gap-6">
                    {journey.map((step, index) => (
                        <motion.div
                            key={index}
                            className="relative"
                            initial={{ opacity: 0, y: 50 }}
                            whileInView={{ opacity: 1, y: 0 }}
                            transition={{ delay: index * 0.2 }}
                            whileHover={{ scale: 1.05 }}
                        >
                            <div className="bg-white dark:bg-slate-800 rounded-3xl p-6 shadow-lg border border-slate-200 dark:border-slate-700 text-center relative overflow-hidden">
                                {/* Background Gradient */}
                                <div className={`absolute inset-0 bg-gradient-to-br ${step.color} opacity-5`}></div>
                                
                                {/* Content */}
                                <div className="relative z-10">
                                    <div className={`inline-flex p-4 rounded-2xl bg-gradient-to-br ${step.color} text-white mb-4`}>
                                        <div className="text-2xl">
                                            {step.icon}
                                        </div>
                                    </div>
                                    <h4 className="font-bold text-lg text-slate-900 dark:text-white mb-2">
                                        {step.title}
                                    </h4>
                                    <p className="text-slate-600 dark:text-slate-300 text-sm">
                                        {step.desc}
                                    </p>
                                </div>
                            </div>
                        </motion.div>
                    ))}
                </div>
            </motion.div>

            {/* Values & Interests */}
            <motion.div
                className="mb-12"
                initial={{ opacity: 0, y: 50 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.6 }}
            >
                <h3 className="text-2xl font-bold text-center mb-8 text-slate-900 dark:text-white">
                    What Drives Me
                </h3>
                <div className="grid md:grid-cols-3 gap-6">
                    {values.map((value, index) => (
                        <motion.div
                            key={index}
                            className="bg-gradient-to-br from-slate-50 to-slate-100 dark:from-slate-800 dark:to-slate-700 rounded-2xl p-6 text-center border border-slate-200 dark:border-slate-600"
                            whileHover={{ scale: 1.05, rotate: 1 }}
                            transition={{ type: "spring", stiffness: 300 }}
                        >
                            <div className="text-3xl mb-4 text-blue-600 dark:text-blue-400">
                                {value.icon}
                            </div>
                            <h4 className="font-bold text-slate-900 dark:text-white mb-2">
                                {value.label}
                            </h4>
                            <p className="text-sm text-slate-600 dark:text-slate-300">
                                {value.desc}
                            </p>
                        </motion.div>
                    ))}
                </div>
            </motion.div>

            {/* Call to Action */}
            <motion.div
                className="text-center"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.7 }}
            >
                <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-slate-800 dark:to-slate-700 rounded-2xl p-6 border border-blue-200 dark:border-slate-600">
                    <div className="flex items-center justify-center gap-3 text-slate-700 dark:text-slate-300">
                        <FaRocket className="text-blue-500 text-xl" />
                        <span className="font-medium">Currently seeking internship opportunities to contribute and grow</span>
                        <FaHeart className="text-red-500 text-xl" />
                    </div>
                </div>
            </motion.div>
        </motion.section>
    );
components/projects.tsx:
return (
    <section ref={ref} id="projects" className="scroll-mt-28 mb-28 px-4">
      <div className="max-w-4xl mx-auto"> {/* Reduced from max-w-6xl to max-w-4xl */}
        <h2 className="text-3xl font-medium capitalize mb-8 text-center">Featured Projects</h2>
        
        <motion.p 
          className="text-center text-slate-600 dark:text-slate-300 mb-10 max-w-xl mx-auto text-base"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
          Recent projects showcasing full-stack development and modern web technologies.
        </motion.p>

        <motion.div
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, margin: "-100px" }}
          className="grid gap-6 md:gap-8" 
        >
          {projectsData.map((project, index) => (
            <motion.div key={index} variants={itemVariants}>
              <Project {...project} />
            </motion.div>
          ))}
        </motion.div>

        {/* Call to Action */}
        <motion.div
          className="text-center mt-12" 
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.4 }}
        >
          <p className="text-slate-600 dark:text-slate-300 mb-4 text-sm">
            Want to see more of my work?
          </p>
          <a
            href="https://github.com/AtharvShelke"
            target="_blank"
            className="inline-flex items-center gap-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-2.5 rounded-2xl font-medium shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-300 text-sm" 
          >
            <svg className="w-4 h-4" fill="currentColor" viewBox="0 0 20 20"> {/* Reduced icon size */}
              <path fillRule="evenodd" d="M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z" clipRule="evenodd" />
            </svg>
            View All Projects on GitHub
          </a>
        </motion.div>
      </div>
    </section>
  );
components/project.tsx:
return (
    <motion.div
      ref={ref}
      style={{
        scale: scaleProgress,
        opacity: opacityProgress,
      }}
      className="group"
    >
      <div className="bg-white dark:bg-slate-800 rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-500 border border-slate-200 dark:border-slate-700 hover:border-blue-300 dark:hover:border-blue-600"> {/* Reduced rounded-3xl to rounded-2xl and shadow-2xl to shadow-xl */}
        
        {/* Image Section */}
        <div className="relative overflow-hidden bg-gradient-to-br from-blue-50 to-purple-50 dark:from-slate-700 dark:to-slate-600">
          <Image
            src={imageUrl}
            alt={`Preview of ${title}`}
            quality={100}
            width={800} 
            height={573} 
            className="w-full h-60 md:h-80 object-cover group-hover:scale-105 transition-transform duration-700" 
          />
          
          {/* Overlay with Actions */}
          <div className="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-all duration-300">
            <div className="absolute bottom-4 right-4 flex gap-2"> 
              {link && (
                <motion.a
                  href={link}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="p-2 bg-white/20 backdrop-blur-sm rounded-xl text-white hover:bg-white/30 transition-all duration-300 hover:scale-110" 
                  whileHover={{ y: -2 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <FiExternalLink size={16} /> {/* Reduced from size={20} to size={16} */}
                </motion.a>
              )}
              {github && (
                <motion.a
                  href={github}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="p-2 bg-white/20 backdrop-blur-sm rounded-xl text-white hover:bg-white/30 transition-all duration-300 hover:scale-110" 
                  whileHover={{ y: -2 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <FiGithub size={16} /> {/* Reduced from size={20} to size={16} */}
                </motion.a>
              )}
            </div>
          </div>

          {/* Project Status Badge */}
          <div className="absolute top-4 left-4"> {/* Reduced from top-6 left-6 to top-4 left-4 */}
            <span className="px-2 py-1 text-xs font-medium bg-green-500/90 text-white rounded-full backdrop-blur-sm"> {/* Reduced padding */}
              Completed
            </span>
          </div>
        </div>

        {/* Content Section */}
        <div className="p-6"> {/* Reduced from p-8 to p-6 */}
          {/* Header */}
          <div className="flex items-start justify-between mb-3"> {/* Reduced from mb-4 to mb-3 */}
            <div>
              <h3 className="text-xl md:text-2xl font-bold mb-2 text-slate-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors"> {/* Reduced from text-2xl md:text-3xl to text-xl md:text-2xl */}
                {title}
              </h3>
              {date && (
                <div className="flex items-center gap-2 text-xs text-slate-500 dark:text-slate-400"> {/* Reduced from text-sm to text-xs */}
                  <BiCalendar size={14} /> {/* Reduced from size={16} to size={14} */}
                  <span>{date}</span>
                </div>
              )}
            </div>
          </div>
          
          {/* Description */}
          <p className="text-slate-600 dark:text-slate-300 mb-4 leading-relaxed text-base"> {/* Reduced from mb-6 text-lg to mb-4 text-base */}
            {description}
          </p>

          {/* Tech Stack */}
          <div className="mb-4"> {/* Reduced from mb-6 to mb-4 */}
            <h4 className="text-xs font-semibold text-slate-700 dark:text-slate-300 mb-2 uppercase tracking-wider"> {/* Reduced from text-sm mb-3 to text-xs mb-2 */}
              Technologies Used
            </h4>
            <div className="flex flex-wrap gap-1.5"> {/* Reduced from gap-2 to gap-1.5 */}
              {tags.map((tag, index) => (
                <motion.span
                  key={index}
                  className="px-3 py-1 text-xs font-medium bg-gradient-to-r from-blue-100 to-purple-100 dark:from-blue-900/30 dark:to-purple-900/30 text-blue-700 dark:text-blue-300 rounded-xl border border-blue-200 dark:border-blue-700 hover:scale-105 transition-transform duration-200" 
                  whileHover={{ scale: 1.05 }}
                >
                  {tag}
                </motion.span>
              ))}
            </div>
          </div>

          {/* Action Buttons - Mobile/Desktop */}
          <div className="flex flex-col sm:flex-row gap-2 pt-3 border-t border-slate-200 dark:border-slate-600"> {/* Reduced from gap-3 pt-4 to gap-2 pt-3 */}
            {link && (
              <a
                href={link}
                target="_blank"
                rel="noopener noreferrer"
                className="flex items-center justify-center gap-2 px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl font-medium hover:shadow-lg hover:scale-105 transition-all duration-300 text-sm" 
              >
                <FiExternalLink size={14} /> {/* Reduced icon size */}
                Live Demo
              </a>
            )}
            {github && (
              <a
                href={github}
                target="_blank"
                rel="noopener noreferrer"
                className="flex items-center justify-center gap-2 px-4 py-2 bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300 rounded-xl font-medium hover:bg-slate-200 dark:hover:bg-slate-600 hover:scale-105 transition-all duration-300 text-sm" 
              >
                <FiGithub size={14} /> 
                Source Code
              </a>
            )}
          </div>
        </div>
      </div>
    </motion.div>
  );

components/skills.tsx:
return (
    <section ref={ref} id="skills" className="mb-28 max-w-6xl mx-auto scroll-mt-28 px-4">
      <h2 className="text-3xl font-medium capitalize mb-8 text-center">Technical Skills</h2>
      
      <motion.p 
        className="text-center text-slate-600 dark:text-slate-300 mb-12 max-w-2xl mx-auto"
        initial={{ opacity: 0 }}
        whileInView={{ opacity: 1 }}
        transition={{ duration: 0.6 }}
      >
        My technical toolkit for building modern, scalable applications and solving complex problems.
      </motion.p>

      <div className="space-y-12">
        {skillCategories.map((category, categoryIndex) => (
          <motion.div
            key={category.category}
            initial={{ opacity: 0, y: 50 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ delay: categoryIndex * 0.2 }}
            className="relative"
          >
            {/* Category Header */}
            <div className="text-center mb-8">
              <h3 className={`text-2xl font-bold bg-gradient-to-r ${category.color} bg-clip-text text-transparent mb-2`}>
                {category.category}
              </h3>
              <div className={`w-20 h-1 bg-gradient-to-r ${category.color} mx-auto rounded-full`}></div>
            </div>

            {/* Skills Grid */}
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
              {category.skills.map((skill, index) => (
                <motion.div
                  key={skill.name}
                  initial={{ opacity: 0, scale: 0.8 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ delay: categoryIndex * 0.2 + index * 0.1 }}
                  whileHover={{ y: -5, scale: 1.05 }}
                  className="bg-white dark:bg-slate-800 rounded-2xl p-6 shadow-lg border border-slate-200 dark:border-slate-700 text-center group cursor-pointer"
                >
                  {/* Skill Icon */}
                  <div className={`text-4xl ${skill.color} mb-4 group-hover:scale-110 transition-transform duration-300`}>
                    {skill.icon}
                  </div>
                  
                  {/* Skill Name */}
                  <h4 className="font-semibold text-slate-900 dark:text-white mb-3">
                    {skill.name}
                  </h4>
                  
                  {/* Proficiency Bar */}
                  <div className="w-full bg-slate-200 dark:bg-slate-700 rounded-full h-2 mb-2">
                    <motion.div
                      className={`h-2 bg-gradient-to-r ${category.color} rounded-full`}
                      initial={{ width: 0 }}
                      whileInView={{ width: `${skill.level}%` }}
                      transition={{ duration: 1, delay: categoryIndex * 0.2 + index * 0.1 + 0.5 }}
                    />
                  </div>
                  
                  {/* Proficiency Percentage */}
                  <span className="text-sm text-slate-500 dark:text-slate-400">
                    {skill.level}%
                  </span>
                </motion.div>
              ))}
            </div>
          </motion.div>
        ))}
      </div>

      {/* Learning Section */}
      <motion.div
        className="mt-16 text-center"
        initial={{ opacity: 0 }}
        whileInView={{ opacity: 1 }}
        transition={{ delay: 0.8 }}
      >
        <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-slate-800 dark:to-slate-700 rounded-2xl p-8 border border-blue-200 dark:border-slate-600">
          <h3 className="text-xl font-bold text-slate-900 dark:text-white mb-3">
            Always Learning ðŸ“š
          </h3>
          <p className="text-slate-600 dark:text-slate-300">
            Currently exploring: <span className="font-semibold">Machine Learning</span>, <span className="font-semibold">Cloud Architecture</span>, and <span className="font-semibold">Advanced React Patterns</span>
          </p>
        </div>
      </motion.div>
    </section>
  )
components/experience.tsx:
const Experience = () => {
    const { ref } = useSectionInView("Experience");
    const { theme } = useTheme();
    const [screenSize, setScreenSize] = useState<'mobile' | 'tablet' | 'desktop'>('desktop');

    // Handle screen size detection
    useEffect(() => {
        const handleResize = () => {
            const width = window.innerWidth;
            if (width < 640) {
                setScreenSize('mobile');
            } else if (width < 1024) {
                setScreenSize('tablet');
            } else {
                setScreenSize('desktop');
            }
        };

        // Set initial size
        handleResize();

        // Add event listener
        window.addEventListener('resize', handleResize);

        // Cleanup
        return () => window.removeEventListener('resize', handleResize);
    }, []);

    const containerVariants = {
        hidden: { opacity: 0 },
        visible: {
            opacity: 1,
            transition: {
                staggerChildren: 0.3,
            },
        },
    };

    // Responsive animation variants using state instead of window
    const getItemVariants = (index: number) => ({
        hidden: { 
            opacity: 0, 
            x: screenSize === 'desktop' ? (index % 2 === 0 ? -50 : 50) : 0,
            y: screenSize === 'mobile' ? 50 : 0
        },
        visible: {
            opacity: 1,
            x: 0,
            y: 0,
            transition: {
                duration: 0.6,
                ease: "easeOut" as Easing,
            },
        },
    });

    // Responsive styles based on state
    const getContentStyle = () => ({
        background: theme === 'dark' 
            ? 'linear-gradient(135deg, #1e293b 0%, #334155 100%)' 
            : 'linear-gradient(135deg, #ffffff 0%, #f8fafc 100%)',
        boxShadow: theme === 'dark'
            ? '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)'
            : '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
        border: theme === 'dark' 
            ? '1px solid rgba(148, 163, 184, 0.2)' 
            : '1px solid rgba(148, 163, 184, 0.1)',
        textAlign: "left" as const,
        padding: screenSize === 'mobile' ? "1.25rem 1.5rem" : 
                screenSize === 'tablet' ? "1.5rem 2rem" : "2rem 2.5rem",
        borderRadius: screenSize === 'mobile' ? "1rem" : "1.5rem",
        position: "relative" as const,
        overflow: "hidden" as const,
        margin: screenSize === 'mobile' ? "0 0 1rem 0" : undefined,
        width: screenSize === 'mobile' ? "calc(100% - 40px)" : undefined
    });

    const getIconStyle = () => ({
        background: theme === 'dark'
            ? 'linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%)'
            : 'linear-gradient(135deg, #60a5fa 0%, #a78bfa 100%)',
        color: 'white',
        fontSize: screenSize === 'mobile' ? "1.25rem" : "1.5rem",
        width: screenSize === 'mobile' ? "40px" : "60px",
        height: screenSize === 'mobile' ? "40px" : "60px",
        boxShadow: theme === 'dark'
            ? '0 4px 15px -3px rgba(59, 130, 246, 0.3)'
            : '0 4px 15px -3px rgba(96, 165, 250, 0.3)',
        border: theme === 'dark' 
            ? `${screenSize === 'mobile' ? '2px' : '3px'} solid #1e293b` 
            : `${screenSize === 'mobile' ? '2px' : '3px'} solid white`,
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center'
    });

    return (
        <section ref={ref} id='experience' className="scroll-mt-28 mb-16 sm:mb-28 lg:mb-40 px-3 sm:px-4 lg:px-6">
            <div className="max-w-7xl mx-auto">
                <h2 className="text-3xl font-medium capitalize mb-8 text-center">Experience</h2>
                
                <motion.p 
                    className="text-center text-slate-600 dark:text-slate-300 mb-8 sm:mb-10 lg:mb-12 max-w-xl sm:max-w-2xl mx-auto text-sm sm:text-base lg:text-lg px-4"
                    initial={{ opacity: 0, y: 20 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6 }}
                >
                    My journey through various roles and projects that have shaped my expertise in technology and development.
                </motion.p>

                <motion.div
                    variants={containerVariants}
                    initial="hidden"
                    whileInView="visible"
                    viewport={{ once: true, margin: "-50px" }}
                >
                    <VerticalTimeline 
                        lineColor={theme === 'dark' ? '#475569' : '#e2e8f0'}
                        animate={true}
                        className="vertical-timeline-custom"
                    > 
                        {experiencesData.map((exp, index) => (
                            <motion.div 
                                key={index} 
                                variants={getItemVariants(index)}
                            >
                                <VerticalTimelineElement
                                    position={screenSize === 'desktop' ? (index % 2 === 0 ? "left" : "right") : undefined}
                                    contentStyle={getContentStyle()}
                                    contentArrowStyle={{
                                        display: screenSize === 'mobile' ? 'none' : 'block',
                                        borderRight: index % 2 === 0 
                                            ? (theme === 'dark' ? "0.4rem solid #334155" : "0.4rem solid #f8fafc")
                                            : "none",
                                        borderLeft: index % 2 === 1 
                                            ? (theme === 'dark' ? "0.4rem solid #334155" : "0.4rem solid #f8fafc")
                                            : "none",
                                        filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1))'
                                    }}
                                    date={exp.date}
                                    dateClassName={`text-slate-600 dark:text-slate-300 font-medium text-xs sm:text-sm lg:text-base ${theme === 'dark' ? 'dark-theme-date' : ''}`}
                                    icon={exp.icon}
                                    iconStyle={getIconStyle()}
                                    iconClassName="experience-icon"
                                >
                                    {/* Background decoration - hide on mobile */}
                                    {screenSize !== 'mobile' && (
                                        <div className={`absolute top-0 w-16 h-16 sm:w-20 sm:h-20 bg-gradient-to-br from-blue-500/10 to-purple-500/10 rounded-full -translate-y-4 ${
                                            index % 2 === 0 ? 'right-0 translate-x-4' : 'left-0 -translate-x-4'
                                        }`}></div>
                                    )}
                                    
                                    {/* Content */}
                                    <div className="relative z-10">
                                        <h3 className="text-lg sm:text-xl lg:text-2xl font-bold text-slate-900 dark:text-white mb-2 capitalize leading-tight">
                                            {exp.title}
                                        </h3>
                                        <div className="flex items-center gap-2 mb-2 sm:mb-3">
                                            <div className="w-1.5 h-1.5 sm:w-2 sm:h-2 bg-blue-500 rounded-full flex-shrink-0"></div>
                                            <p className="font-medium text-slate-700 dark:text-slate-300 !mt-0 text-sm sm:text-base">
                                                {exp.location}
                                            </p>
                                        </div>
                                        <p className="!mt-0 !font-normal text-slate-600 dark:text-slate-300 leading-relaxed text-sm sm:text-base">
                                            {exp.description}
                                        </p>
                                        
                                        {/* Skills/Technologies - responsive layout */}
                                        {exp.skills && (
                                            <div className="mt-3 sm:mt-4 flex flex-wrap gap-1.5 sm:gap-2">
                                                {exp.skills.map((skill, skillIndex) => (
                                                    <span
                                                        key={skillIndex}
                                                        className="px-2 py-1 sm:px-3 sm:py-1 text-xs font-medium bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full border border-blue-200 dark:border-blue-700"
                                                    >
                                                        {skill}
                                                    </span>
                                                ))}
                                            </div>
                                        )}
                                    </div>
                                </VerticalTimelineElement>
                            </motion.div>
                        ))}
                    </VerticalTimeline>
                </motion.div>

                {/* Call to Action - Responsive */}
                <motion.div
                    className="text-center mt-8 sm:mt-12 lg:mt-16"
                    initial={{ opacity: 0, y: 20 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: 0.4 }}
                >
                    <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-slate-800 dark:to-slate-700 rounded-2xl sm:rounded-3xl p-4 sm:p-6 lg:p-8 border border-blue-200 dark:border-slate-600 mx-4 sm:mx-0">
                        <h3 className="text-lg sm:text-xl lg:text-2xl font-bold text-slate-900 dark:text-white mb-2 sm:mb-3">
                            Ready for New Opportunities ðŸš€
                        </h3>
                        <p className="text-slate-600 dark:text-slate-300 mb-4 sm:mb-6 text-sm sm:text-base max-w-2xl mx-auto">
                            I'm actively seeking internship and full-time opportunities to contribute to innovative projects.
                        </p>
                        <div className="flex flex-col sm:flex-row justify-center gap-3 sm:gap-4">
                            <a
                                href="#contact"
                                className="inline-flex items-center justify-center gap-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-4 sm:px-6 py-2.5 sm:py-3 rounded-xl sm:rounded-2xl font-medium shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-300 text-sm sm:text-base"
                            >
                                Let's Connect
                            </a>
                            <a
                                href="/Atharv_Shelke_Resume.pdf"
                                download
                                className="inline-flex items-center justify-center gap-2 bg-white dark:bg-slate-800 border-2 border-slate-200 dark:border-slate-600 text-slate-700 dark:text-slate-300 px-4 sm:px-6 py-2.5 sm:py-3 rounded-xl sm:rounded-2xl font-medium hover:border-blue-500 dark:hover:border-blue-400 hover:scale-105 transition-all duration-300 text-sm sm:text-base"
                            >
                                Download Resume
                            </a>
                        </div>
                    </div>
                </motion.div>
            </div>
        </section>
    )
}
components/contact.tsx:
const Contact = () => {
    const { ref } = useSectionInView("Contact");
    const [isSubmitting, setIsSubmitting] = useState(false);
    const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');

    const handleSubmit = async (formData: FormData) => {
        setIsSubmitting(true);
        setSubmitStatus('idle');
        
        try {
            await sendEmail(formData);
            setSubmitStatus('success');
            // Reset form
            const form = document.getElementById('contact-form') as HTMLFormElement;
            form?.reset();
        } catch (error) {
            setSubmitStatus('error');
            console.error("Email sending failed:", error);

        } finally {
            setIsSubmitting(false);
            // Reset status after 5 seconds
            setTimeout(() => setSubmitStatus('idle'), 5000);
        }
    };

    const contactInfo = [
        {
            icon: <FaEnvelope />,
            label: "Email",
            value: "shelkeatharv964@gmail.com",
            href: "mailto:shelkeatharv964@gmail.com"
        },
        {
            icon: <FaLinkedin />,
            label: "LinkedIn",
            value: "Connect with me",
            href: "https://www.linkedin.com/in/atharv-shelke/"
        },
        {
            icon: <FaGithub />,
            label: "GitHub",
            value: "View my projects",
            href: "https://github.com/AtharvShelke"
        },
        {
            icon: <FaMapMarkerAlt />,
            label: "Location",
            value: "Maharashtra, India",
            href: null
        }
    ];

    return (
        <motion.section
            ref={ref}
            id="contact"
            className="mb-20 sm:mb-28 w-full max-w-6xl mx-auto px-4"
            initial={{ opacity: 0, y: 100 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, ease: "easeOut" }}
            viewport={{ once: true }}
        >
            <h2 className="text-3xl font-medium capitalize mb-8 text-center">Get in Touch</h2>
            
            <motion.p 
                className="text-center text-slate-600 dark:text-slate-300 mb-16 max-w-2xl mx-auto text-lg"
                initial={{ opacity: 0 }}
                whileInView={{ opacity: 1 }}
                transition={{ delay: 0.2, duration: 0.6 }}
            >
                I'm always open to discussing new opportunities, interesting projects, or just having a chat about technology. 
                Feel free to reach out!
            </motion.p>

            <div className="grid lg:grid-cols-2 gap-12 items-start">
                
                {/* Contact Information */}
                <motion.div
                    className="space-y-8"
                    initial={{ opacity: 0, x: -50 }}
                    whileInView={{ opacity: 1, x: 0 }}
                    transition={{ delay: 0.3, duration: 0.6 }}
                >
                    <h3 className="text-2xl font-bold text-slate-900 dark:text-white mb-6">
                        Let's Connect
                    </h3>
                    
                    <div className="space-y-4">
                        {contactInfo.map((info, index) => (
                            <motion.div
                                key={index}
                                className="flex items-center gap-4 p-4 bg-white dark:bg-slate-800 rounded-2xl shadow-lg border border-slate-200 dark:border-slate-700 hover:shadow-xl transition-all duration-300"
                                whileHover={{ scale: 1.02, x: 5 }}
                                initial={{ opacity: 0, y: 20 }}
                                whileInView={{ opacity: 1, y: 0 }}
                                transition={{ delay: 0.4 + index * 0.1, duration: 0.5 }}
                            >
                                <div className="p-3 bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl text-white">
                                    {info.icon}
                                </div>
                                <div className="flex-1">
                                    <p className="text-sm font-medium text-slate-500 dark:text-slate-400">
                                        {info.label}
                                    </p>
                                    {info.href ? (
                                        <a
                                            href={info.href}
                                            target={info.href.startsWith('http') ? '_blank' : undefined}
                                            rel={info.href.startsWith('http') ? 'noopener noreferrer' : undefined}
                                            className="text-slate-900 dark:text-white font-medium hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
                                        >
                                            {info.value}
                                        </a>
                                    ) : (
                                        <p className="text-slate-900 dark:text-white font-medium">
                                            {info.value}
                                        </p>
                                    )}
                                </div>
                            </motion.div>
                        ))}
                    </div>
                </motion.div>

                {/* Contact Form */}
                <motion.div
                    className="bg-white dark:bg-slate-800 rounded-3xl shadow-2xl border border-slate-200 dark:border-slate-700 p-8"
                    initial={{ opacity: 0, x: 50 }}
                    whileInView={{ opacity: 1, x: 0 }}
                    transition={{ delay: 0.4, duration: 0.6 }}
                >
                    <h3 className="text-2xl font-bold text-slate-900 dark:text-white mb-6">
                        Send a Message
                    </h3>
                    
                    <form 
                        id="contact-form"
                        className="space-y-6" 
                        action={handleSubmit}
                    >
                        {/* Email Input */}
                        <div>
                            <label 
                                htmlFor="senderEmail" 
                                className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2"
                            >
                                Your Email
                            </label>
                            <input
                                type="email"
                                name="senderEmail"
                                id="senderEmail"
                                className="w-full h-12 rounded-2xl border-2 border-slate-200 dark:border-slate-600 bg-slate-50 dark:bg-slate-700 px-4 text-slate-900 dark:text-white placeholder-slate-500 dark:placeholder-slate-400 focus:border-blue-500 dark:focus:border-blue-400 focus:outline-none transition-colors"
                                placeholder="your.email@example.com"
                                required
                                maxLength={200}
                                disabled={isSubmitting}
                            />
                        </div>

                        {/* Message Textarea */}
                        <div>
                            <label 
                                htmlFor="message" 
                                className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2"
                            >
                                Your Message
                            </label>
                            <textarea
                                name="message"
                                id="message"
                                rows={6}
                                className="w-full rounded-2xl border-2 border-slate-200 dark:border-slate-600 bg-slate-50 dark:bg-slate-700 px-4 py-3 text-slate-900 dark:text-white placeholder-slate-500 dark:placeholder-slate-400 focus:border-blue-500 dark:focus:border-blue-400 focus:outline-none transition-colors resize-none"
                                placeholder="Tell me about your project, question, or just say hello!"
                                required
                                maxLength={500}
                                disabled={isSubmitting}
                            />
                        </div>

                        {/* Submit Button */}
                        <motion.button 
                            type="submit" 
                            className={`w-full h-12 flex items-center justify-center gap-3 rounded-2xl font-medium transition-all duration-300 ${
                                submitStatus === 'success' 
                                    ? 'bg-green-600 hover:bg-green-700' 
                                    : submitStatus === 'error'
                                    ? 'bg-red-600 hover:bg-red-700'
                                    : 'bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700'
                            } text-white shadow-lg hover:shadow-xl disabled:opacity-70 disabled:cursor-not-allowed`}
                            whileHover={{ scale: isSubmitting ? 1 : 1.02 }}
                            whileTap={{ scale: isSubmitting ? 1 : 0.98 }}
                            disabled={isSubmitting}
                        >
                            {isSubmitting ? (
                                <>
                                    <BiLoaderAlt className="animate-spin text-lg" />
                                    Sending...
                                </>
                            ) : submitStatus === 'success' ? (
                                <>
                                    <HiCheckCircle className="text-lg" />
                                    Message Sent!
                                </>
                            ) : submitStatus === 'error' ? (
                                <>
                                    <HiExclamationCircle className="text-lg" />
                                    Try Again
                                </>
                            ) : (
                                <>
                                    Send Message
                                    <FaPaperPlane className="text-sm group-hover:translate-x-1 group-hover:-translate-y-1 transition-transform" />
                                </>
                            )}
                        </motion.button>

                        {/* Status Message */}
                        {submitStatus === 'success' && (
                            <motion.p
                                initial={{ opacity: 0, y: 10 }}
                                animate={{ opacity: 1, y: 0 }}
                                className="text-green-600 dark:text-green-400 text-sm text-center"
                            >
                                Thank you! I'll get back to you soon.
                            </motion.p>
                        )}
                        
                        {submitStatus === 'error' && (
                            <motion.p
                                initial={{ opacity: 0, y: 10 }}
                                animate={{ opacity: 1, y: 0 }}
                                className="text-red-600 dark:text-red-400 text-sm text-center"
                            >
                                Something went wrong. Please try again or email me directly.
                            </motion.p>
                        )}
                    </form>
                </motion.div>
            </div>

            {/* Quick Contact CTA */}
            <motion.div
                className="mt-16 text-center"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.6, duration: 0.6 }}
            >
                <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-slate-800 dark:to-slate-700 rounded-3xl p-8 border border-blue-200 dark:border-slate-600">
                    <h3 className="text-xl font-bold text-slate-900 dark:text-white mb-3">
                        Prefer a Quick Chat? ðŸ’¬
                    </h3>
                    <p className="text-slate-600 dark:text-slate-300 mb-4">
                        I'm always available for a coffee chat (virtual or in-person) to discuss opportunities and ideas.
                    </p>
                    <a
                        href="mailto:shelkeatharv964@gmail.com?subject=Quick Chat Request"
                        className="inline-flex items-center gap-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-3 rounded-2xl font-medium shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-300"
                    >
                        <FaEnvelope />
                        Email Me Directly
                    </a>
                </div>
            </motion.div>
        </motion.section>
    )
}
///
